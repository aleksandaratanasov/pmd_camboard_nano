<?xml version="1.0"?>
<launch>

  <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera" default="camera"/>

  <arg name="frame_id" default="/$(arg camera)_optical_frame"/>

  <!-- Push down all topics/nodelets into "camera" namespace -->
  <group ns="$(arg camera)">

    <!-- Cloud handler -->
    <node pkg="pmd_camboard_nano" type="pmd_camboard_nano_cloud_statistical_outlier_removal" name="cloud_statistical_outlier_removal">
          <param name="topicIn" type="string" value="/camera/points"/>
          <param name="topicOut" type="string" value="/camera/cloud_statistical_outlier_removal"/>
          <param name="write_to_file" type="bool" value="true"/>
          <param name="meanK" type="int" value="50"/>
          <param name="stdDevMulThresh" type="double" value="1.0"/>
    </node>
  </group>

  <!-- Publish transforms for depth frame and depth optical frame -->
  <!--<arg name="optical_rotate" value="0 0 0 -1.5707963267948966 0 -1.5707963267948966"/>

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link1"
        args="0 0 0 0 0 0 /$(arg camera)_link /$(arg camera)_frame 100"/>

  <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
        args="$(arg optical_rotate) /$(arg camera)_frame /$(arg camera)_optical_frame 100"/>-->

</launch>
